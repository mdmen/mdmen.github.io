---
interface Item {
  name: string;
  path: string;
}

export interface Props {
  items: Item[];
}

const { items } = Astro.props;
---

<nav class="navigation" aria-label="Main menu">
  {
    items.map(({ name, path }) => {
      const isHighlighted = path === "/" ? Astro.url.pathname === "/" : Astro.url.pathname.startsWith(path);

      const isCurrentPage = Astro.url.pathname === path;

      return (
        <a
          href={path}
          class:list={["navigation-link", { active: isHighlighted }]}
          aria-current={isCurrentPage ? "page" : false}
          data-astro-prefetch
        >
          {name}
        </a>
      );
    })
  }
</nav>

<style>
  .navigation {
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: var(--spacing-4);
  }

  .navigation-link {
    text-decoration: none;

    &:is(:hover, .active:not(:focus-visible)) {
      text-decoration-line: underline;
    }
  }
</style>
